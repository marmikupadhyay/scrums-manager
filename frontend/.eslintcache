[{"/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/index.js":"1","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/App.js":"2","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/components/NavBar.js":"3","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/scrumsDash/ScrumDash.js":"4","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/scrumsDash/ScrumList.js":"5","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/scrumsDash/ScrumInfo.js":"6","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/landing/LoginPage.js":"7","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/landing/RegisterPage.js":"8"},{"size":168,"mtime":1609869893103,"results":"9","hashOfConfig":"10"},{"size":1085,"mtime":1609932574740,"results":"11","hashOfConfig":"10"},{"size":1400,"mtime":1609928116657,"results":"12","hashOfConfig":"10"},{"size":1158,"mtime":1609927454123,"results":"13","hashOfConfig":"10"},{"size":2358,"mtime":1609928126829,"results":"14","hashOfConfig":"10"},{"size":111,"mtime":1609917941842,"results":"15","hashOfConfig":"10"},{"size":3151,"mtime":1609933622849,"results":"16","hashOfConfig":"10"},{"size":3159,"mtime":1609933709767,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17a0v2x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/index.js",[],["38","39"],"/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/App.js",["40"],"/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/components/NavBar.js",["41"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nimport { Button, AppBar, Grid, Hidden, Typography } from '@material-ui/core/';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles((theme) => ({\n\tnavBar: {\n\t\tbackground: theme.palette.background.primary,\n\t},\n\tnavBrand: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tpadding: '16px',\n\t\tfontSize: '1.7em',\n\t\tfontFamily: 'Roboto',\n\t},\n\tbutton: {\n\t\tjustifySelf: 'flex-end',\n\t\tfontSize: '1.2em',\n\t\tpadding: '1em',\n\t\theight: '100%',\n\t},\n\tlink: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t\tmargin: '0',\n\t\tdisplay: 'block',\n\t},\n}));\n\nfunction NavBar() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<AppBar id='main-nav' style={{ position: 'relative' }}>\n\t\t\t<Grid className={classes.navBar} container justify='space-between'>\n\t\t\t\t<Grid item className={classes.navBrand}>\n\t\t\t\t\t<PlaylistAddCheckIcon\n\t\t\t\t\t\tstyle={{ fontSize: '1.5em', paddingRight: '10px' }}\n\t\t\t\t\t/>\n\t\t\t\t\tScrums Archive\n\t\t\t\t</Grid>\n\t\t\t\t<Link to='/login' className={classes.link}>\n\t\t\t\t\t<Button color='inherit' className={classes.button}>\n\t\t\t\t\t\t<ExitToAppIcon style={{ paddingRight: '10px' }} />\n\t\t\t\t\t\t<Hidden smDown>Logout</Hidden>\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</Grid>\n\t\t</AppBar>\n\t);\n}\n\nexport default NavBar;\n","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/scrumsDash/ScrumDash.js",["42"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ScrumList from './ScrumList';\nimport ScrumInfo from './ScrumInfo';\n\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n\tmainBody: {\n\t\t// marginTop: '10vh',\n\t},\n}));\n\nconst dummyData = [\n\t{\n\t\t_id: '1',\n\t\tdate: '2 Dec, 2020',\n\t},\n\t{\n\t\t_id: '2',\n\t\tdate: '15 Dec, 2020',\n\t},\n\t{\n\t\t_id: '3',\n\t\tdate: '28 Dec, 2020',\n\t},\n\t{\n\t\t_id: '4',\n\t\tdate: '5 Jan, 2020',\n\t},\n];\n\nfunction ScrumDash() {\n\tconst classes = useStyles();\n\tconst [allScrums, setAllScrums] = useState(dummyData);\n\tconst [currentActive, setCurrentActive] = useState(allScrums[0]);\n\n\tconst selectScrum = (id) => {\n\t\tallScrums.forEach((scrum) => {\n\t\t\tif (id === scrum._id) setCurrentActive(scrum);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className={classes.mainBody}>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs={12} md={4} lg={3}>\n\t\t\t\t\t<ScrumList\n\t\t\t\t\t\tcurrentActive={currentActive}\n\t\t\t\t\t\tallScrums={allScrums}\n\t\t\t\t\t\tselectScrum={selectScrum}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={8} lg={9}>\n\t\t\t\t\t<ScrumInfo />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nexport default ScrumDash;\n","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/scrumsDash/ScrumList.js",["43","44"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tGrid,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nconst useStyles = makeStyles((theme) => ({\n\tmainBody: {\n\t\tminHeight: '100vh',\n\t\tborderRight: '1px solid black',\n\t\tbackground: theme.palette.background.secondary,\n\t},\n\ttitle: {\n\t\tfontSize: '2em',\n\t\tmargin: '0.25em 0.25em',\n\t\tpadding: '0.5em',\n\t\tfontFamily: 'Lato',\n\t\tcolor: theme.palette.font.light,\n\t\tbackground: theme.palette.background.primary,\n\t\tboxShadow: theme.shadows[5],\n\t\tposition: 'relative',\n\t\t'&::after': {\n\t\t\tcontent: \"' '\",\n\t\t\tposition: 'absolute',\n\t\t\twidth: '50%',\n\t\t\theight: '2px',\n\t\t\tbottom: '20%',\n\t\t\tleft: '.25em',\n\t\t\tborderBottom: `3px solid ${theme.palette.accent.primary}`,\n\t\t},\n\t},\n\tlistBox: {\n\t\tmargin: '0 1em',\n\t\tpadding: '0em',\n\t\tcolor: theme.palette.font.light,\n\t},\n\tlistItem: {\n\t\tboxShadow: theme.shadows[3],\n\t\tbackground: 'rgb(0, 21, 36)',\n\t\tmargin: '1em 0',\n\t\ttransition: '0.5s',\n\t\tcursor: 'pointer',\n\t\t'&:hover': {\n\t\t\ttransform: 'scale(1.05)',\n\t\t},\n\t\tborderLeft: `2px solid ${theme.palette.accent.primary}`,\n\t},\n\tlistActive: {\n\t\tbackground: 'rgb(0, 21, 36)',\n\t\tboxShadow: theme.shadows[3],\n\t\ttransition: '0.5s',\n\t\tcursor: 'pointer',\n\t\tpadding: '15px 0',\n\t\tfontSize: '1.1em',\n\t\tmargin: '1em 0',\n\t\tborderLeft: `7px solid ${theme.palette.accent.primary}`,\n\t\ttransform: 'scale(1.05)',\n\t},\n\ticon: {\n\t\tcolor: theme.palette.font.light,\n\t\tfontSize: '2em',\n\t},\n}));\nfunction ScrumList(props) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid container item direction='column' className={classes.mainBody}>\n\t\t\t<Grid item className={classes.title}>\n\t\t\t\tHistory\n\t\t\t</Grid>\n\t\t\t<Grid item className={classes.listBox}>\n\t\t\t\t<List>\n\t\t\t\t\t{props.allScrums.map((scrum, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tprops.selectScrum(scrum._id);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tscrum._id == props.currentActive._id\n\t\t\t\t\t\t\t\t\t\t? classes.listActive\n\t\t\t\t\t\t\t\t\t\t: classes.listItem\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ChevronRightIcon\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={scrum.date} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</List>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default ScrumList;\n","/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/scrumsDash/ScrumInfo.js",[],"/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/landing/LoginPage.js",["45"],"/media/marmik/New Volume/PROJECTS/scrums-manager/frontend/src/landing/RegisterPage.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":27,"column":9,"nodeType":"53","messageId":"54","endLine":27,"endColumn":19},{"ruleId":"51","severity":1,"message":"55","line":5,"column":40,"nodeType":"53","messageId":"54","endLine":5,"endColumn":50},{"ruleId":"51","severity":1,"message":"56","line":34,"column":20,"nodeType":"53","messageId":"54","endLine":34,"endColumn":32},{"ruleId":"51","severity":1,"message":"57","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":85,"column":20,"nodeType":"60","messageId":"61","endLine":85,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":11,"column":3,"nodeType":"64","messageId":"61","endLine":11,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":11,"column":3,"nodeType":"64","messageId":"61","endLine":11,"endColumn":13},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'setAllScrums' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","no-global-assign","no-unsafe-negation"]